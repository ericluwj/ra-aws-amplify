{"version":3,"file":"ra-aws-amplify.esm.js","sources":["../src/buildAmplifyProvider/getFinalType.ts","../src/buildAmplifyProvider/buildVariables.ts","../src/buildAmplifyProvider/buildGqlQuery.ts","../src/buildAmplifyProvider/getResponseParser.ts","../src/buildAmplifyProvider/buildQuery.ts","../src/buildAmplifyProvider/createClient.ts","../src/buildAmplifyProvider/buildAmplifyProvider.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/AmplifyAuthProvider/AmplifyAuthProvider.tsx","../src/buildAmplifyProvider/getAuthType.ts","../src/buildAmplifyProvider/useAmplifyDataProvider.ts","../src/AmplifyPagination/AmplifyPagination.tsx","../src/AmplifyPagination/reducer.ts","../src/fields/S3Field.tsx","../src/fields/S3File.tsx","../src/fields/S3FileField.tsx","../src/fields/S3Image.tsx","../src/fields/S3ImageField.tsx","../src/inputs/S3Input.tsx","../src/inputs/S3FileInput.tsx","../src/inputs/S3ImageInput.tsx","../src/index.ts"],"sourcesContent":["import { TypeKind } from 'graphql';\n\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\nconst getFinalType = (type: any): any => {\n  if (type?.kind === TypeKind.NON_NULL || type?.kind === TypeKind.LIST) {\n    return getFinalType(type.ofType);\n  }\n\n  return type;\n};\n\nexport default getFinalType;\n","import { S3Object } from '../types';\n/* eslint-disable default-case */\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n} from 'ra-core';\n\nimport getFinalType from './getFinalType';\nimport isList from './isList';\n\nconst sanitizeValue = (type: any, value: any) => {\n  if (type.name === 'Int') {\n    return parseInt(value, 10);\n  }\n\n  if (type.name === 'Float') {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nconst castType = (value: any, type: any) => {\n  switch (`${type.kind}:${type.name}`) {\n    case 'SCALAR:Int':\n      return Number(value);\n\n    case 'SCALAR:String':\n      return String(value);\n\n    case 'SCALAR:Boolean':\n      return Boolean(value);\n\n    default:\n      return value;\n  }\n};\n\nconst cleanS3Object = (input: S3Object) => {\n  const fields = ['key', 'level', 'identityId', 'region', 'bucket'];\n  return Object.entries(input).reduce(\n    (acc: any, [k, v]: [string, unknown]): Record<string, string> => {\n      if (fields.includes(k)) {\n        acc[k] = v;\n      }\n      return acc;\n    },\n    {}\n  );\n};\n\nconst prepareParams = (\n  params: any,\n  queryType: any,\n  introspectionResults: any\n) => {\n  const result: any = {};\n\n  if (!params) {\n    return params;\n  }\n\n  Object.keys(params).forEach(async key => {\n    const param: any = params[key];\n    let arg: any = null;\n\n    if (!param) {\n      result[key] = param;\n      return;\n    }\n\n    if (queryType && Array.isArray(queryType.args)) {\n      arg = queryType.args.find((item: any) => item.name === key);\n    }\n\n    if (param instanceof File || key === 'rawFile') {\n      // file upload should be handled with Storage\n      return;\n    }\n\n    if (param instanceof Date) {\n      result[key] = param.toISOString();\n      return;\n    }\n\n    if (\n      param instanceof Object &&\n      !Array.isArray(param) &&\n      arg &&\n      arg.type.kind === 'INPUT_OBJECT'\n    ) {\n      const args = introspectionResults.types.find(\n        (item: any) =>\n          item.kind === arg.type.kind && item.name === arg.type.name\n      ).inputFields;\n      result[key] = prepareParams(param, { args }, introspectionResults);\n      return;\n    }\n\n    if (\n      param instanceof Object &&\n      (!param as any) instanceof Date &&\n      !Array.isArray(param)\n    ) {\n      result[key] = prepareParams(param, queryType, introspectionResults);\n      return;\n    }\n\n    if (!arg) {\n      result[key] = param;\n      return;\n    }\n\n    result[key] = castType(param, arg.type);\n  });\n\n  return result;\n};\n\n/**\n * This handles filtering and sorting.\n */\nconst buildGetListVariables = (introspectionResults: any) => (\n  resource: any,\n  _aorFetchType: string,\n  params: any\n  ) => {\n  // console.log('params: ', params);\n\n  const { nextToken: token } = params.filter || {};\n  const { page, perPage: limit } = params.pagination || {};\n  const nextToken = token && page > 1 ? token : undefined;\n  // console.log('nextToken: ', nextToken);\n  return {\n    limit,\n    nextToken,\n  };\n  let variables: any = { filter: {} };\n  if (params.filter) {\n    variables.filter = Object.keys(params.filter).reduce((acc, key) => {\n      if (key === 'ids') {\n        return { ...acc, ids: params.filter[key] };\n      }\n\n      if (typeof params.filter[key] === 'object') {\n        const type = introspectionResults.types.find(\n          (t: any) => t.name === `${resource.type.name}Filter`\n        );\n        const filterSome = type.inputFields.find(\n          (t: any) => t.name === `${key}_some`\n        );\n\n        if (filterSome) {\n          const filter = Object.keys(params.filter[key]).reduce(\n            (acc, k) => ({\n              ...acc,\n              [`${k}_in`]: params.filter[key][k],\n            }),\n            {}\n          );\n          return { ...acc, [`${key}_some`]: filter };\n        }\n      }\n\n      const parts = key.split('.');\n\n      if (parts.length > 1) {\n        if (parts[1] === 'id') {\n          const type = introspectionResults.types.find(\n            (t: any) => t.name === `${resource.type.name}Filter`\n          );\n          const filterSome = type.inputFields.find(\n            (t: any) => t.name === `${parts[0]}_some`\n          );\n\n          if (filterSome) {\n            return {\n              ...acc,\n              [`${parts[0]}_some`]: { id: params.filter[key] },\n            };\n          }\n\n          return { ...acc, [parts[0]]: { id: params.filter[key] } };\n        }\n\n        const resourceField = resource.type.fields.find(\n          (f: any) => f.name === parts[0]\n        );\n        const type = getFinalType(resourceField.type);\n        return {\n          ...acc,\n          [key]: sanitizeValue(type, params.filter[key]),\n        };\n      }\n\n      const resourceField = resource.type.fields.find(\n        (f: any) => f.name === key\n      );\n\n      if (resourceField) {\n        const type = getFinalType(resourceField.type);\n        const isAList = isList(resourceField.type);\n\n        if (isAList) {\n          return {\n            ...acc,\n            [key]: Array.isArray(params.filter[key])\n              ? params.filter[key].map((value: any) =>\n                  sanitizeValue(type, value)\n                )\n              : sanitizeValue(type, [params.filter[key]]),\n          };\n        }\n\n        return {\n          ...acc,\n          [key]: sanitizeValue(type, params.filter[key]),\n        };\n      }\n\n      return { ...acc, [key]: params.filter[key] };\n    }, {});\n  }\n\n  if (params.pagination) {\n    variables.page = parseInt(params.pagination.page, 10) - 1;\n    variables.perPage = parseInt(params.pagination.perPage, 10);\n  }\n\n  if (params.sort) {\n    variables.sortField = params.sort.field;\n    variables.sortOrder = params.sort.order;\n  }\n\n  return variables;\n};\n\n/**\n * This handles sanitisation of upload data.\n */\nconst buildCreateUpdateVariables = (introspectionResults: any) => (\n  // unused, left for code cohesion. Can remove in future iterations if unused.\n  _resource: any,\n  _fetchType: any,\n  // used arguments\n  params: any,\n  queryType: any\n) => {\n  /** Get the accepted arguments from the schema introspection */\n  const inputArgument = queryType.args.find((a: any) => a.name === 'input');\n  const inputTypeName = getFinalType(inputArgument.type);\n  const { inputFields } = introspectionResults.types.find(\n    (t: any) => t.name === inputTypeName.name\n  );\n\n  /** Generate GraphQL input */\n  const input = Object.keys(params.data).reduce((acc, key) => {\n    /** Get the input field (i.e. CreatePostInput) for validation */\n    const inputField = inputFields.find((f: any) => f.name === key);\n\n    /** Skip any params passed that are not an input field */\n    if (\n      !inputField ||\n      !inputFields.find((f: any) => f.name === inputField.name)\n    ) {\n      return acc;\n    }\n\n    /** Strip any S3Objects of unnecessary fields, pulling only what we need. */\n    if (getFinalType(inputField.type).name?.match(/S3Object/i)) {\n      /** S3Object fields could be an array. */\n      const cleanS3Param = Array.isArray(params.data[key])\n        ? params.data[key].map(cleanS3Object)\n        : cleanS3Object(params.data[key]);\n\n      return {\n        ...acc,\n        [key]: cleanS3Param,\n      };\n    }\n\n    return {\n      ...acc,\n      [key]: params.data[key],\n    };\n  }, {});\n\n  return { input };\n};\n\nexport default (introspectionResults: any) => (\n  resource: any,\n  aorFetchType: string,\n  params: any,\n  queryType: any\n) => {\n  const preparedParams = prepareParams(params, queryType, introspectionResults);\n\n  switch (aorFetchType) {\n    case GET_LIST: {\n      return buildGetListVariables(introspectionResults)(\n        resource,\n        aorFetchType,\n        preparedParams\n      );\n    }\n    case GET_MANY:\n      return (preparedParams.ids as []).reduce(\n        (acc: Record<string, string>, id: string, i: number) => {\n          acc[`id${i}`] = id;\n          return acc;\n        },\n        {}\n      );\n    // return {\n    //   limit: params.ids.length,\n    //   filter: {\n    //     or: params.ids.map((id: string | number) => ({ id: { eq: id } })),\n    //   },\n    // };\n    case GET_MANY_REFERENCE:\n      // grab the arg the secondary GSI key is searching for an use that\n      // as the param in our query.\n      const query = introspectionResults.queries.find(\n        (q: any) => q.name === params.target\n      );\n      if (!query) {\n        throw Error(\n          `Couldn't find a query for ${params.target}. Did you forget to add a param queryField to your @key directive for ${params.target}? See https://github.com/mayteio/ra-aws-amplify#a-post-with-comments-using-the-referencemanyfield-`\n        );\n      }\n      const key = query.args[0].name;\n\n      return {\n        limit: preparedParams.pagination.perPage,\n        [key]: preparedParams.id,\n      };\n\n    case GET_ONE:\n      return { id: preparedParams.id };\n    case DELETE:\n      return {\n        input: { id: preparedParams.id },\n      };\n    case CREATE:\n    case UPDATE: {\n      return buildCreateUpdateVariables(introspectionResults)(\n        resource,\n        aorFetchType,\n        preparedParams,\n        queryType\n      );\n    }\n  }\n};\n","import gql from 'graphql-tag';\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n} from 'ra-core';\nexport const getGqlQuery = (_introspectionResults: any) => (\n  raFetchType: string,\n  resource: any,\n  params: any,\n  queries: any,\n  mutations: any\n) => {\n  switch (raFetchType) {\n    case GET_LIST:\n      return gql(queries[`list${resource.type.name}s`]);\n    case GET_ONE:\n      return gql(queries[`get${resource.type.name}`]);\n    case GET_MANY_REFERENCE:\n      const targetQuery = params.target;\n      return gql(queries[targetQuery]);\n    case CREATE:\n      return gql(mutations[`create${resource.type.name}`]);\n    case UPDATE:\n      return gql(mutations[`update${resource.type.name}`]);\n    case DELETE:\n      return gql(mutations[`delete${resource.type.name}`]);\n    default:\n      return undefined;\n  }\n};\n","import { GET_LIST, GET_MANY_REFERENCE } from 'ra-core';\n\nexport const LARGE_TOTAL = 9999;\n\nconst sanitizeResource = (data: any) => {\n  const result: any = Object.keys(data).reduce((acc, key) => {\n    if (key.startsWith('_')) {\n      return acc;\n    }\n\n    const dataKey = data[key];\n\n    if (dataKey === null || dataKey === undefined) {\n      return acc;\n    }\n\n    if (Array.isArray(dataKey)) {\n      if (typeof dataKey[0] === 'object') {\n        return {\n          ...acc,\n          [key]: dataKey.map(sanitizeResource),\n          [`${key}Ids`]: dataKey.map(d => d.id),\n        };\n      } else {\n        return { ...acc, [key]: dataKey };\n      }\n    }\n\n    if (typeof dataKey === 'object') {\n      return {\n        ...acc,\n        ...(dataKey &&\n          dataKey.id && {\n            [`${key}.id`]: dataKey.id,\n          }),\n        [key]: sanitizeResource(dataKey),\n      };\n    }\n\n    return { ...acc, [key]: dataKey };\n  }, {});\n\n  return result;\n};\n\nexport default (_introspectionResults: any) => (\n  aorFetchType: string,\n  resource: any,\n  queryType: any,\n  params: any\n) => (response: any) => {\n  const data = response.data;\n  if (aorFetchType === GET_LIST) {\n    return {\n      data: data[`list${resource.type.name}s`].items.map(sanitizeResource),\n      nextToken: data[`list${resource.type.name}s`].nextToken,\n      total: LARGE_TOTAL,\n    };\n  }\n\n  if (aorFetchType === GET_MANY_REFERENCE) {\n    return {\n      data:\n        data[params.target] && data[params.target].items.map(sanitizeResource),\n      nextToken: data[params.target].nextToken,\n      total: LARGE_TOTAL,\n    };\n  }\n\n  return {\n    data: data[queryType.name] && sanitizeResource(data[queryType.name]),\n    total: LARGE_TOTAL,\n  };\n};\n","import buildVariables from './buildVariables';\nimport { getGqlQuery } from './buildGqlQuery';\nimport getResponseParser from './getResponseParser';\n\nexport const buildQueryFactory = (\n  buildVariablesImpl: any,\n  getGqlQuery: any,\n  getResponseParserImpl: any\n) => ({ queries, mutations }: any) => (introspectionResults: any) => {\n  const knownResources = introspectionResults.resources.map(\n    (r: any) => r.type.name\n  );\n\n  return (aorFetchType: string, resourceName: string, params: any) => {\n    // console.log(aorFetchType, resourceName, params);\n    const resource = introspectionResults.resources.find(\n      (r: any) => r.type.name === resourceName\n    );\n\n    if (!resource) {\n      throw new Error(\n        `Unknown resource ${resourceName}. Make sure it has been declared on your server side schema. Known resources are ${knownResources.join(\n          ', '\n        )}`\n      );\n    }\n\n    const queryType = resource[aorFetchType];\n\n    if (!queryType) {\n      throw new Error(\n        `No query or mutation matching fetch type ${aorFetchType} could be found for resource ${resource.type.name}`\n      );\n    }\n\n    const variables = buildVariablesImpl(introspectionResults)(\n      resource,\n      aorFetchType,\n      params,\n      queryType\n    );\n\n    const query = getGqlQuery(introspectionResults)(\n      aorFetchType,\n      resource,\n      params,\n      queries,\n      mutations\n    );\n\n    const parseResponse = getResponseParserImpl(introspectionResults)(\n      aorFetchType,\n      resource,\n      queryType,\n      params\n    );\n\n    return {\n      query,\n      variables,\n      parseResponse,\n    };\n  };\n};\n\nexport default buildQueryFactory(\n  buildVariables,\n  getGqlQuery,\n  getResponseParser\n);\n","import { createAppSyncLink } from 'aws-appsync';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport { createClientOpts } from '../types';\n\nexport const createClient = ({ endpoint, auth }: createClientOpts) => {\n  // create HTTPLink\n  const httpLink = createHttpLink({\n    uri: endpoint,\n  });\n\n  // create AppSyncLink\n  const awsLink = createAppSyncLink(auth);\n\n  const fragmentMatcher: IntrospectionFragmentMatcher = new IntrospectionFragmentMatcher(\n    {\n      introspectionQueryResultData: {\n        __schema: {\n          types: [],\n        },\n      },\n    }\n  );\n\n  return new ApolloClient({\n    link: awsLink.concat(httpLink),\n    cache: new InMemoryCache({ fragmentMatcher }),\n  });\n};\n","import merge from 'lodash/merge';\nimport buildGraphQLProvider from 'ra-data-graphql';\nimport {\n  DELETE,\n  DELETE_MANY,\n  UPDATE,\n  UPDATE_MANY,\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n} from 'ra-core';\n\nimport defaultBuildQuery from './buildQuery';\nimport { createClient } from './createClient';\n\nconst SINGLE_OPERATION_MAP: Record<string, string> = {\n  [GET_MANY]: GET_ONE,\n  [UPDATE_MANY]: UPDATE,\n  [DELETE_MANY]: DELETE,\n};\n\nconst defaultOptions = {\n  introspection: {\n    operationNames: {\n      [GET_LIST]: (resource: any) => `list${resource.name}s`,\n      [GET_ONE]: (resource: any) => `get${resource.name}`,\n      [GET_MANY]: (resource: any) => `list${resource.name}s`,\n      [GET_MANY_REFERENCE]: (resource: any) => `list${resource.name}s`,\n      [CREATE]: (resource: any) => `create${resource.name}`,\n      [UPDATE]: (resource: any) => `update${resource.name}`,\n      [DELETE]: (resource: any) => `delete${resource.name}`,\n    },\n    exclude: undefined,\n    include: undefined,\n  },\n};\n\nexport const buildAmplifyProvider = ({\n  queries,\n  mutations,\n  schema,\n  ...options\n}: any) => {\n  const client = createClient({ ...options });\n  const buildQuery = defaultBuildQuery({ queries, mutations, schema });\n  const args = merge({ client, buildQuery }, defaultOptions, options, {\n    introspection: { schema: schema.data.__schema },\n  });\n\n  return buildGraphQLProvider(args).then((defaultDataProvider: any) => {\n    return (fetchType: any, resource: any, params: any) => {\n      // Amplify does not support multiple deletions so instead we send multiple DELETE requests\n      // This can be optimized using the apollo-link-batch-http\n      const { ids, ...otherParams } = params;\n      // console.log(`FETCH TYPE: ${fetchType}`);\n      switch (fetchType) {\n        case DELETE_MANY:\n          return Promise.all(\n            params.ids.map((id: string) =>\n              defaultDataProvider(SINGLE_OPERATION_MAP[fetchType], resource, {\n                id,\n                ...otherParams,\n              })\n            )\n          ).then((results) => {\n            const data = results.reduce(\n              (acc: any, _: any, idx: any): any => [...acc, params.ids[idx]],\n              []\n            );\n\n            return { data };\n          });\n        case UPDATE_MANY:\n        case GET_MANY:\n          return Promise.all(\n            params.ids.map((id: string) =>\n              defaultDataProvider(SINGLE_OPERATION_MAP[fetchType], resource, {\n                id,\n                ...otherParams,\n              })\n            )\n          ).then((results) => {\n            const data =\n              fetchType === GET_MANY\n                ? results.map((result: any) => result.data)\n                : results.reduce(\n                    (acc: any, { data }: any): any => [...acc, data.id],\n                    []\n                  );\n\n            return { data };\n          });\n        default:\n          return defaultDataProvider(fetchType, resource, params);\n      }\n    };\n  });\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React, { useEffect, useState, useContext } from 'react';\nimport Auth, { AuthClass } from '@aws-amplify/auth';\nimport { Hub } from '@aws-amplify/core';\nimport { HubCapsule } from '@aws-amplify/core/lib-esm/Hub';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\n\nexport const NOT_INSIDE_AMPLIFY_PROVIDER =\n  'No AuthenticationContext. Did you forget to wrap your app in <AmplifyProvider />?';\n\n/** Provides the entire Auth object via a hook to use it with hooks. Sugar. */\nconst AmplifyAuthContext = React.createContext<AuthClass | undefined>(\n  undefined\n);\n\n/** Provides just the user object */\nconst UserContext = React.createContext<CognitoUser | undefined>(undefined);\n\n/**\n * This is written specifically for Amplify/Hub, however, you can replace\n * this provider with another provider (say <AzureProvider />) that replicates\n * the API above and everything using useAuth and useUser should just work!\n */\nexport const AmplifyAuthProvider: React.FC = ({ children }) => {\n  // on mount, store the user and listen to hub changes (Amplify's internal)\n  const [user, setUser] = useState<undefined | CognitoUser>(undefined);\n  useEffect(() => {\n    // get user on mount with a immediately invoked function\n    (async () => {\n      try {\n        const user = await Auth.currentAuthenticatedUser();\n        setUser(user === 'not authenticated' ? undefined : user);\n      } catch (error) {\n        // trackBug(error)\n      }\n    })();\n\n    // bind hub listener for auth changes\n    const listener = async ({ payload }: HubCapsule) => {\n      if (payload.event === 'signIn') {\n        try {\n          const user = await Auth.currentAuthenticatedUser();\n          setUser(user);\n        } catch (error) {\n          // trackBug(error)\n        }\n      } else if (payload.event === 'signOut') {\n        setUser(undefined);\n      }\n    };\n    Hub.listen('auth', listener);\n\n    // clean up hub listener\n    return () => {\n      Hub.remove('auth', listener);\n    };\n  }, []);\n\n  /**\n   * Used by react-admin\n   */\n\n  return (\n    <AmplifyAuthContext.Provider value={Auth}>\n      <UserContext.Provider value={user}>{children}</UserContext.Provider>\n    </AmplifyAuthContext.Provider>\n  );\n};\n\nexport function useAuth() {\n  const context = useContext(AmplifyAuthContext);\n  if (!context) throw Error(NOT_INSIDE_AMPLIFY_PROVIDER);\n  return context;\n}\n\nexport function useAuthProvider() {\n  return {\n    /** Signs in either using username and password, or federated if a provider is passed. */\n    login: ({ username, password, provider }: any) =>\n      username && password && !provider\n        ? Auth.signIn(username, password)\n        : Auth.federatedSignIn({ provider }),\n    logout: () => Auth.signOut(),\n    checkAuth: () => Auth.currentSession(),\n    checkError: () => Auth.currentCredentials(),\n    /** Providers permissions for the whole app. identityId is used with S3Input. */\n    getPermissions: () =>\n      Promise.all([Auth.currentSession(), Auth.currentCredentials()]).then(\n        ([session, { identityId }]) => ({\n          claims: { ...session.getIdToken().payload, identityId },\n        })\n      ),\n  };\n}\n\nexport function useUser() {\n  const context = useContext(UserContext);\n  return context;\n}\n","import { AUTH_TYPE, AuthOptions } from 'aws-appsync-auth-link';\nimport { Auth } from 'aws-amplify';\n\nexport const getAuthType = (\n  config: Record<string, any>,\n  specifiedAuthType?: AUTH_TYPE | undefined\n): AuthOptions => {\n  const authType =\n    specifiedAuthType ||\n    config.aws_appsync_authenticationType ||\n    AUTH_TYPE.NONE;\n  switch (authType) {\n    case AUTH_TYPE.AMAZON_COGNITO_USER_POOLS:\n      return {\n        // @ts-ignore\n        type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n        jwtToken: async () => {\n          try {\n            return (await Auth.currentSession()).getAccessToken().getJwtToken();\n          } catch (error) {\n            console.log('error with jwt', error);\n            return Promise.reject('Unauthorized');\n          }\n        },\n      };\n\n    case AUTH_TYPE.API_KEY:\n      return {\n        type: AUTH_TYPE.API_KEY,\n        apiKey: config.aws_appsync_apiKey,\n      };\n    case AUTH_TYPE.NONE:\n    default:\n      return {\n        type: AUTH_TYPE.NONE,\n      };\n  }\n};\n","import { DataProvider } from 'ra-core';\nimport { AUTH_TYPE } from 'aws-appsync-auth-link';\nimport { useState, useEffect } from 'react';\n\nimport { useUser } from '../AmplifyAuthProvider';\nimport { buildAmplifyProvider } from './buildAmplifyProvider';\nimport { getAuthType } from './getAuthType';\n\ninterface useDataProviderArgs {\n  config: Record<string, any>;\n  authType?: AUTH_TYPE | undefined;\n  queries: any;\n  mutations: any;\n  schema: any;\n  // schema: {\n  //   data: IntrospectionResultData | any;\n  // };\n}\n\nexport function useAmplifyDataProvider({\n  config,\n  schema,\n  queries,\n  mutations,\n  authType = undefined,\n}: useDataProviderArgs): any {\n  const [dataProvider, setDataProvider] = useState<DataProvider | any>();\n\n  // try to guess the auth type based on config, otherwise specified\n  const buildDataProvider = async (authType: AUTH_TYPE) => {\n    const auth = getAuthType(config, authType);\n    return await buildAmplifyProvider({\n      endpoint: config.aws_appsync_graphqlEndpoint,\n      auth: {\n        url: config.aws_appsync_graphqlEndpoint,\n        region: config.aws_appsync_region,\n        auth,\n      },\n      schema,\n      queries,\n      mutations,\n    });\n  };\n\n  /** Rebuild dataProvider */\n  const user = useUser();\n  let specifiedAuthType = authType || config.aws_appsync_authenticationType;\n\n  useEffect(() => {\n    // if (specifiedAuthType === AUTH_TYPE.AMAZON_COGNITO_USER_POOLS && !user) {\n    //   return;\n    // }\n\n    buildDataProvider(specifiedAuthType).then(dataProvider =>\n      setDataProvider(() => dataProvider)\n    );\n  }, [user, specifiedAuthType]);\n\n  return dataProvider;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport { useSelector } from 'react-redux';\n\nexport function AmplifyPagination(props: any) {\n  const nextToken = useSelector<any>(state => state.nextToken);\n  if (props.page === 1 && !nextToken) {\n    return null;\n  }\n\n  // useEffect(() => {\n  //   // setFilter((prev: any) => ({ ...prev, nextToken }));\n  // }, [nextToken]);\n\n  return (\n    <Toolbar>\n      {props.page > 1 && (\n        <Button\n          color=\"primary\"\n          key=\"prev\"\n          startIcon={<ChevronLeft />}\n          onClick={() => props.setPage(props.page - 1)}\n        >\n          Prev\n        </Button>\n      )}\n      {nextToken && (\n        <Button\n          color=\"primary\"\n          key=\"next\"\n          endIcon={<ChevronRight />}\n          onClick={() => { props.setPage(props.page + 1); props.setNextToken(nextToken); }}\n        >\n          Next\n        </Button>\n      )}\n    </Toolbar>\n  );\n}\n","import { CRUD_GET_LIST_SUCCESS } from 'react-admin';\n\nexport const nextTokenReducer = (\n  previousState = null,\n  { type, payload }: any\n) => {\n  // store the crud token when it comes back\n  if (type === CRUD_GET_LIST_SUCCESS) {\n    // console.log(payload);\n\n    return payload.nextToken || null;\n  }\n\n  // remove the nextToken before trying to get a new list\n  // if (type === CRUD_GET_LIST) {\n  //   return null;\n  // }\n  return previousState;\n};\n","import React from 'react';\nimport { Storage } from 'aws-amplify';\nimport { CircularProgress } from '@material-ui/core';\n\ninterface S3ImageFieldProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  source?: string;\n  record?: Record<string, any>;\n  label?: string;\n  imgProps?: any;\n  addLabel?: boolean;\n}\n\nexport const S3Field: React.FC<S3ImageFieldProps> = ({\n  source,\n  record = {},\n  children,\n  ...props\n}) => {\n  // store the S3 signed URL in state for use in return\n  const [src, set] = React.useState<string | undefined>();\n  const { key, identityId, level } =\n    source && typeof record[source] === 'object' ? record[source] : record;\n\n  // Listen for changes on\n  React.useEffect(() => {\n    if (key && !key.match(/blob|http/i)) {\n      // if level has been passed down, add the appropriate options.\n      const options =\n        level === 'protected' || level === 'private'\n          ? { level, identityId }\n          : {};\n\n      // get the URL and set it in state\n      Storage.get(key, options).then(result => set(result as string));\n    }\n  }, [key, level, identityId]);\n\n  // if there's no source and there is a key, show a loading spinner\n  if (!src && key) {\n    return <CircularProgress data-testid=\"s3-object-loading\" />;\n  }\n\n  // if there's a src, show the field!\n  if (src) {\n    const childProps = {\n      record,\n      source,\n      src,\n      ...props,\n    };\n    // @ts-ignore\n    return React.cloneElement(children, childProps);\n  }\n\n  // otherwise do nothing\n  return null;\n};\n\nS3Field.defaultProps = {\n  addLabel: true,\n};\n","import React from 'react';\nimport { S3Object } from '../types';\n\nimport ImageIcon from '@material-ui/icons/ImageRounded';\nimport MovieIcon from '@material-ui/icons/MovieRounded';\nimport DescriptionIcon from '@material-ui/icons/DescriptionRounded';\nimport { makeStyles, Theme, Link } from '@material-ui/core';\n\nconst getIcon = (type: string) => {\n  switch (type) {\n    case 'image/png':\n    case 'image/gif':\n    case 'image/jpeg':\n    case 'image/jpg':\n      return ImageIcon;\n    case 'video/mp4':\n    case 'video/3gpp':\n    case 'video/quicktime':\n    case 'video/x-msvideo':\n      return MovieIcon;\n    default:\n      return DescriptionIcon;\n  }\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport const S3File: React.FC<{\n  record?: Record<string, any>;\n  source?: string;\n}> = ({ record, source }) => {\n  const s3Object: S3Object = (record && source && record[source]) || record;\n  const Icon = getIcon(s3Object.type);\n  const classes = useStyles();\n  return (\n    <>\n      <Icon\n        titleAccess={`Icon for file type ${s3Object.type || 'unknown'}`}\n        className={classes.icon}\n      />\n      <Link\n        href={s3Object.key}\n        title={`Open ${s3Object.key}`}\n        target=\"_blank\"\n      >{`${s3Object.key}${s3Object.level ? ` - ${s3Object.level}` : ''}`}</Link>\n    </>\n  );\n};\n","import React from 'react';\nimport { S3File } from './S3File';\nimport { S3Field } from './S3Field';\n\ninterface S3FileFieldProps {\n  record?: Record<string, any>;\n  source?: string;\n}\n\nexport const S3FileField: React.FC<S3FileFieldProps> = props => {\n  return (\n    <S3Field {...props}>\n      <S3File />\n    </S3Field>\n  );\n};\n","import React from 'react';\nimport { S3ImageFieldProps } from './S3ImageField';\nimport { S3Object } from '../types';\n\nexport const S3Image: React.FC<S3ImageFieldProps & { src?: string }> = ({\n  src,\n  record,\n  source,\n  imgProps,\n}) => {\n  const s3Object: S3Object = (record && source && record[source]) || record;\n  return s3Object && src ? (\n    <img src={src} title={s3Object.key} {...imgProps} />\n  ) : null;\n};\n","import React from 'react';\nimport { S3Field } from './S3Field';\nimport { S3Image } from './S3Image';\n\nexport interface S3ImageFieldProps {\n  record?: Record<string, any>;\n  source?: string;\n  imgProps?: any;\n  addLabel?: boolean;\n}\n\nexport const S3ImageField: React.FC<S3ImageFieldProps> = ({\n  // to avoid html img prop errors\n  imgProps = {},\n  ...props\n}) => {\n  return (\n    <S3Field {...props}>\n      <S3Image imgProps={imgProps} />\n    </S3Field>\n  );\n};\n\nS3ImageField.defaultProps = {\n  addLabel: true,\n};\n","import React from 'react';\nimport { useInput, useNotify, usePermissions } from 'react-admin';\nimport { Storage } from 'aws-amplify';\nimport { uuid } from 'uuidv4';\nimport { S3Object } from '../types';\n\ninterface S3InputProps {\n  source: string;\n  dropzoneOptions?: any;\n  multiple?: boolean;\n  level?: 'public' | 'protected' | 'private' | undefined;\n}\n\nexport const S3Input: React.FC<S3InputProps> = ({\n  source,\n  dropzoneOptions = {},\n  level,\n  children,\n  ...props\n}) => {\n  // we use permissions to grab the identityId\n  const { permissions } = usePermissions();\n  const { input } = useInput({ source });\n  const notify = useNotify();\n\n  /**\n   * Handle the react-dropzone onDrop\n   * @param {File[]} files files dropped onto the upload area\n   */\n  const onDrop = async (files: File[]) => {\n    try {\n      const results = await Promise.all(\n        files.map(file => {\n          const nameParts = file.name.split('.');\n          return Storage.put(\n            `${nameParts[0]}-${uuid()\n              .split('-')\n              .slice(0, 2)\n              .join('-')}.${nameParts[1]}`,\n            file\n          ).then((result: any) => {\n            let value: S3Object = {\n              key: result.key,\n              type: file.type,\n              level: null,\n              identityId: null,\n            };\n            if (level === 'protected' || level === 'private') {\n              value.identityId = permissions.claims.identityId;\n              value.level = level;\n            }\n            return value;\n          });\n        })\n      );\n\n      if (props.multiple) {\n        input.onChange(results);\n      } else {\n        input.onChange(results[0]);\n      }\n    } catch (error) {\n      input.onChange(undefined);\n      notify('There was an error uploading your files.');\n    }\n  };\n\n  const childProps = {\n    source,\n    options: { onDrop, ...dropzoneOptions },\n    ...props,\n  };\n\n  // @ts-ignore\n  return React.cloneElement(children, childProps);\n};\n","import React from 'react';\nimport { FileInput } from 'react-admin';\nimport { S3Input } from './S3Input';\nimport { S3FileField } from '../fields';\n\nimport { makeStyles } from '@material-ui/core';\n\ninterface S3InputProps {\n  source: string;\n  dropzoneOptions?: any;\n  label?: string;\n  level?: 'public' | 'protected' | 'private' | undefined;\n}\n\nconst useStyles = makeStyles({\n  fileInput: {\n    '& .previews > div': {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  },\n});\n\nexport const S3FileInput: React.FC<S3InputProps> = props => {\n  // S3Input clones the element and injects the logic as props\n  const classes = useStyles();\n  return (\n    <S3Input {...props}>\n      <FileInput className={classes.fileInput}>\n        <S3FileField source={props.source} />\n      </FileInput>\n    </S3Input>\n  );\n};\n","import React from 'react';\nimport { ImageInput } from 'react-admin';\nimport { S3Input } from './S3Input';\nimport { S3ImageField } from '../fields';\n\ninterface S3InputProps {\n  source: string;\n  dropzoneOptions?: any;\n  label?: string;\n  level?: 'public' | 'protected' | 'private' | undefined;\n}\n\nexport const S3ImageInput: React.FC<S3InputProps> = props => {\n  return (\n    <S3Input {...props}>\n      <ImageInput>\n        <S3ImageField source={props.source} />\n      </ImageInput>\n    </S3Input>\n  );\n};\n","export * from './buildAmplifyProvider';\nexport * from './AmplifyPagination';\nexport * from './AmplifyAuthProvider';\n\nexport * from './fields';\nexport * from './inputs';\n\nimport { nextTokenReducer } from './AmplifyPagination';\nexport const reducers = {\n  nextToken: nextTokenReducer,\n};\n"],"names":["getFinalType","type","kind","TypeKind","NON_NULL","LIST","ofType","castType","value","name","Number","String","Boolean","cleanS3Object","input","fields","Object","entries","reduce","acc","k","v","includes","prepareParams","params","queryType","introspectionResults","result","keys","forEach","key","param","arg","Array","isArray","args","find","item","File","Date","toISOString","types","inputFields","buildGetListVariables","resource","_aorFetchType","filter","token","nextToken","pagination","page","limit","perPage","undefined","buildCreateUpdateVariables","_resource","_fetchType","inputArgument","a","inputTypeName","t","data","inputField","f","match","cleanS3Param","map","aorFetchType","preparedParams","GET_LIST","GET_MANY","ids","id","i","GET_MANY_REFERENCE","query","queries","q","target","Error","GET_ONE","DELETE","CREATE","UPDATE","getGqlQuery","_introspectionResults","raFetchType","mutations","gql","targetQuery","LARGE_TOTAL","sanitizeResource","startsWith","dataKey","d","response","items","total","buildQueryFactory","buildVariablesImpl","getResponseParserImpl","knownResources","resources","r","resourceName","join","variables","parseResponse","buildVariables","getResponseParser","createClient","endpoint","auth","httpLink","createHttpLink","uri","awsLink","createAppSyncLink","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","ApolloClient","link","concat","cache","InMemoryCache","SINGLE_OPERATION_MAP","UPDATE_MANY","DELETE_MANY","defaultOptions","introspection","operationNames","exclude","include","buildAmplifyProvider","schema","options","client","buildQuery","defaultBuildQuery","merge","buildGraphQLProvider","then","defaultDataProvider","fetchType","otherParams","Promise","all","results","_","idx","NOT_INSIDE_AMPLIFY_PROVIDER","AmplifyAuthContext","React","createContext","UserContext","AmplifyAuthProvider","children","useState","user","setUser","useEffect","Auth","currentAuthenticatedUser","listener","payload","event","Hub","listen","remove","Provider","useAuth","context","useContext","useAuthProvider","login","username","password","provider","signIn","federatedSignIn","logout","signOut","checkAuth","currentSession","checkError","currentCredentials","getPermissions","session","identityId","claims","getIdToken","useUser","getAuthType","config","specifiedAuthType","authType","aws_appsync_authenticationType","AUTH_TYPE","NONE","AMAZON_COGNITO_USER_POOLS","jwtToken","getAccessToken","getJwtToken","error","console","log","reject","API_KEY","apiKey","aws_appsync_apiKey","useAmplifyDataProvider","dataProvider","setDataProvider","buildDataProvider","aws_appsync_graphqlEndpoint","url","region","aws_appsync_region","AmplifyPagination","props","useSelector","state","Toolbar","Button","color","startIcon","ChevronLeft","onClick","setPage","endIcon","ChevronRight","setNextToken","nextTokenReducer","previousState","CRUD_GET_LIST_SUCCESS","S3Field","source","record","src","set","level","Storage","get","CircularProgress","childProps","cloneElement","defaultProps","addLabel","getIcon","ImageIcon","MovieIcon","DescriptionIcon","useStyles","makeStyles","theme","icon","marginRight","spacing","S3File","s3Object","Icon","classes","titleAccess","className","Link","href","title","S3FileField","S3Image","imgProps","S3ImageField","S3Input","dropzoneOptions","usePermissions","permissions","useInput","notify","useNotify","onDrop","files","file","nameParts","split","put","uuid","slice","multiple","onChange","fileInput","display","alignItems","S3FileInput","FileInput","S3ImageInput","ImageInput","reducers"],"mappings":"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"}